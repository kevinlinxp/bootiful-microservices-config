server:
  port: ${PORT:9999}

spring:
  cloud:
    stream:
      bindings:
        # "output" is the name of the channel by default defined by
        # org.springframework.cloud.stream.messaging.Source#OUTPUT. It corresponds
        # to "input" defined by org.springframework.cloud.stream.messaging.Sink#INPUT
        #
        # You can use @EnableBinding to bind your application to a channel. Input and
        # output channels with the same destination are connected.
        output:
          destination: reservations
  rabbitmq:
    host: http://cloudapp-rabbitmq-server

# security.oauth2.resource.userInfoUri=http://localhost:9191/uaa/user

#hystrix.command.default.execution.isolation.strategy=SEMAPHORE

#
# security.oauth2.client.client-secret=36f1653c889f3cc466519aa873188c33adfd53d4
# security.oauth2.client.client-id=644c5dd8451bad01a627
# security.oauth2.client.user-authorization-uri=https://github.com/login/oauth/authorize
# security.oauth2.client.access-token-uri=https://github.com/login/oauth/access_token
# security.oauth2.client.client-authentication-scheme=form
# security.oauth2.resource.user-info-uri=https://api.github.com/user
# security.oauth2.resource.prefer-token-info=false
